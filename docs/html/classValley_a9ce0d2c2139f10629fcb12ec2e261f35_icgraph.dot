digraph "Valley::AssertRiverArrayIsInitialized"
{
 // LATEX_PDF_SIZE
  bgcolor="transparent";
  edge [fontname=Helvetica,fontsize=10,labelfontname=Helvetica,labelfontsize=10];
  node [fontname=Helvetica,fontsize=10,shape=box,height=0.2,width=0.4];
  rankdir="RL";
  Node1 [id="Node000001",label="Valley::AssertRiverArray\lIsInitialized",height=0.2,width=0.4,color="gray40", fillcolor="grey60", style="filled", fontcolor="black",tooltip="Asserts that the river array is initialized."];
  Node1 -> Node2 [id="edge1_Node000001_Node000002",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node2 [id="Node000002",label="Valley::DoTrades",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classValley.html#aa5308f01b1b609a63508404fa8b7a46f",tooltip="Performs trades in the Valley. Trades start recursively from the root node. The city in the root node..."];
  Node2 -> Node2 [id="edge2_Node000002_Node000002",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node2 -> Node3 [id="edge3_Node000002_Node000003",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node3 [id="Node000003",label="Valley::DoTrades",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classValley.html#a97bd06aed292614351b1db74566d0259",tooltip="Will make the city at the given node trade with its children. At their time, the children will trade ..."];
  Node2 -> Node4 [id="edge4_Node000002_Node000004",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node4 [id="Node000004",label="main",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$program_8cc.html#ae66f6b31b5ad750f1fe042a706a4e3d4",tooltip="Entry point of the program."];
  Node1 -> Node3 [id="edge5_Node000001_Node000003",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node1 -> Node5 [id="edge6_Node000001_Node000005",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node5 [id="Node000005",label="Valley::GetCity",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classValley.html#a75ff9182c65289925ff544ac37e6b792",tooltip="Gets the city with the specified ID."];
  Node5 -> Node3 [id="edge7_Node000005_Node000003",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node5 -> Node4 [id="edge8_Node000005_Node000004",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node5 -> Node6 [id="edge9_Node000005_Node000006",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node6 [id="Node000006",label="Valley::NavigateRoute",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classValley.html#a2d27338b1463dfa8f30f5e1e1c4e9a89",tooltip="Navigates the specified route, updating the cities of the valley accordingly."];
  Node6 -> Node4 [id="edge10_Node000006_Node000004",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node5 -> Node7 [id="edge11_Node000005_Node000007",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node7 [id="Node000007",label="Valley::TestRouteStep",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classValley.html#aca437e781152975022adef348bbbda23",tooltip="Tests a route step and updates the best route if necessary."];
  Node7 -> Node8 [id="edge12_Node000007_Node000008",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node8 [id="Node000008",label="Valley::GetBestRoute",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classValley.html#aa61921a453bfcab8a76822fb16553560",tooltip="Gets the best route for the ship. The best route is the shortest route possible where the maximum amo..."];
  Node8 -> Node4 [id="edge13_Node000008_Node000004",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node7 -> Node7 [id="edge14_Node000007_Node000007",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node1 -> Node9 [id="edge15_Node000001_Node000009",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node9 [id="Node000009",label="Valley::GetCityIds",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classValley.html#a150cd1a95764b0b85e8d57aecc73b0c0",tooltip="Gets the list of city Ids in the Valley."];
  Node1 -> Node10 [id="edge16_Node000001_Node000010",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node10 [id="Node000010",label="Valley::GetShip",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classValley.html#a070726f5f925f2a2891aa5226ef58f17",tooltip="Gets a reference to the ship."];
  Node10 -> Node4 [id="edge17_Node000010_Node000004",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node1 -> Node11 [id="edge18_Node000001_Node000011",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node11 [id="Node000011",label="Valley::HasCity",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classValley.html#ab9ae654d0a8f51b5c80ec9e88447fe7d",tooltip="Checks if a city with the specified ID exists."];
  Node11 -> Node5 [id="edge19_Node000011_Node000005",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node11 -> Node4 [id="edge20_Node000011_Node000004",dir="back",color="steelblue1",style="solid",tooltip=" "];
}
