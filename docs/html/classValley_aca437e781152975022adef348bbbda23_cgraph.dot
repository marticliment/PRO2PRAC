digraph "Valley::TestRouteStep"
{
 // LATEX_PDF_SIZE
  bgcolor="transparent";
  edge [fontname=Helvetica,fontsize=10,labelfontname=Helvetica,labelfontsize=10];
  node [fontname=Helvetica,fontsize=10,shape=box,height=0.2,width=0.4];
  rankdir="LR";
  Node1 [id="Node000001",label="Valley::TestRouteStep",height=0.2,width=0.4,color="gray40", fillcolor="grey60", style="filled", fontcolor="black",tooltip="Tests a route step and updates the best route if necessary."];
  Node1 -> Node2 [id="edge1_Node000001_Node000002",color="steelblue1",style="solid",tooltip=" "];
  Node2 [id="Node000002",label="Ship::BuyingProduct",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classShip.html#abfe895d54721c20ddcff465cf37ac308",tooltip="Getter for the buying product."];
  Node1 -> Node3 [id="edge2_Node000001_Node000003",color="steelblue1",style="solid",tooltip=" "];
  Node3 [id="Node000003",label="Valley::GetCity",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classValley.html#a75ff9182c65289925ff544ac37e6b792",tooltip="Gets the city with the specified ID."];
  Node3 -> Node4 [id="edge3_Node000003_Node000004",color="steelblue1",style="solid",tooltip=" "];
  Node4 [id="Node000004",label="Valley::AssertRiverArray\lIsInitialized",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classValley.html#a9ce0d2c2139f10629fcb12ec2e261f35",tooltip="Asserts that the river array is initialized."];
  Node3 -> Node5 [id="edge4_Node000003_Node000005",color="steelblue1",style="solid",tooltip=" "];
  Node5 [id="Node000005",label="Valley::HasCity",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classValley.html#ab9ae654d0a8f51b5c80ec9e88447fe7d",tooltip="Checks if a city with the specified ID exists."];
  Node5 -> Node4 [id="edge5_Node000005_Node000004",color="steelblue1",style="solid",tooltip=" "];
  Node1 -> Node6 [id="edge6_Node000001_Node000006",color="steelblue1",style="solid",tooltip=" "];
  Node6 [id="Node000006",label="Product::GetExceedingAmount",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classProduct.html#a8f4bf3557d4819295e408fbf938e77bd",tooltip="Get the exceeding amount of the product. This method returns 0 if the product has a negative balance ..."];
  Node1 -> Node7 [id="edge7_Node000001_Node000007",color="steelblue1",style="solid",tooltip=" "];
  Node7 [id="Node000007",label="Product::GetId",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classProduct.html#adae0bac61207aedcba747c07bbd0b893",tooltip="Get the ID of the product."];
  Node1 -> Node8 [id="edge8_Node000001_Node000008",color="steelblue1",style="solid",tooltip=" "];
  Node8 [id="Node000008",label="Product::GetMissingAmount",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classProduct.html#a0c42f35816a3fa42d9f3f985ca23f90a",tooltip="Get the missing amount of the product. This method returns 0 if the product has a positive balance (G..."];
  Node1 -> Node9 [id="edge9_Node000001_Node000009",color="steelblue1",style="solid",tooltip=" "];
  Node9 [id="Node000009",label="Ship::SellingProduct",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classShip.html#af97be45c84069be682979f6c9d90880f",tooltip="Getter for the selling product."];
  Node1 -> Node1 [id="edge10_Node000001_Node000001",color="steelblue1",style="solid",tooltip=" "];
}
